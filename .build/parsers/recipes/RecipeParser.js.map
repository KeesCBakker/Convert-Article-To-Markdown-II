{
  "version": 3,
  "sources": ["../../../parsers/recipes/RecipeParser.ts"],
  "sourcesContent": ["import { DefaultParser, elementToMarkdown } from '../DefaultParser'\nimport { parseHTML } from 'linkedom'\nimport removeMd from 'remove-markdown'\nimport { scrape } from \"../scraper\"\n\nexport function toMarkdown(el: HTMLElement | null) {\n  let content = elementToMarkdown(el)\n\n  // remove bolds\n  return content.replace(/\\*\\*/g, '')\n}\n\nexport abstract class RecipeParser extends DefaultParser {\n\n  protected parseHeader(document: Document) {\n    let header = super.parseHeader(document)\n\n    let subHeader = \"\"\n\n    let featureImage = (\n      document.querySelector('meta[property=og\\\\:image]')?.getAttribute(\"content\") ||\n      document.querySelector('link[rel=image_src]')?.getAttribute(\"href\")\n    )\n    if (featureImage) {\n      subHeader += `image: ${featureImage}\\n`\n    }\n\n    subHeader += `created: ${new Date().toISOString()}\\n`\n    subHeader += \"---\\n\\n\"\n\n    return header.replace(\"---\\n\\n\", subHeader)\n  }\n\n  abstract canParse(url: URL): boolean\n\n  async parse(url: URL) {\n\n    this._url = url\n\n    let txt = await scrape(url)\n    const { document } = parseHTML(txt)\n    this.preParse(document)\n\n    let ingredients = toMarkdown(this.getIngredientsNode(document))\n    let steps = toMarkdown(this.getStepsNode(document))\n    let tips = toMarkdown(this.getTipsNode(document))\n    let title = toMarkdown(this.getTitleNode(document))\n    let description = toMarkdown(this.getDescriptionNode(document))\n\n    let content = \"\"\n\n    if (title) {\n      title = removeMd(title)\n      content += `# ${title}\\n`\n    }\n\n    if (description) {\n      description = removeMd(description)\n      content += description\n      content += \"\\n\\n\"\n    }\n\n    if (ingredients) {\n\n      ingredients = ingredients.split(\"* \")\n        .map(x => processIngredients(x))\n        .map(x => multiplyIngredients(x, 1))\n        .join(\"* \")\n\n      content += \"## Ingredi\u00EBnten\\n\"\n      content += ingredients\n      content += \"\\n\\n\"\n    }\n\n    if (steps) {\n      content += \"## Stappen\\n\"\n      content += steps\n      content += \"\\n\\n\"\n    }\n\n    if (tips) {\n      content += \"## Tips\\n\"\n      content += tips\n      content += \"\\n\\n\"\n    }\n\n    content = content.trim()\n\n    let header = this.parseHeader(document)\n\n    return header + content\n  }\n\n  protected abstract getIngredientsNode(document: Document): HTMLElement | null\n  protected abstract getStepsNode(document: Document): HTMLElement | null\n  protected abstract getTipsNode(document: Document): HTMLElement | null\n  protected abstract getDescriptionNode(document: Document): HTMLElement | null\n\n  protected getTitleNode(document: Document): HTMLElement | null {\n    return document.querySelector(\"h1\")\n  }\n\n}\n\nexport function remove(document: Document, selector: string) {\n  document.querySelectorAll(selector).forEach(el => {\n    el.remove()\n  })\n}\n\nexport function processIngredients(line: string) {\n  return line\n    .replace('to maten', 'tomaten')\n    .replace(/ eetl /g, ' el ')\n    .replace(/ g /g, ' gr ')\n    .replace('gram', 'gr')\n    .replace('theelepel', 'tl')\n    .replace('theel', 'tl')\n    .replace('tls', 'tl')\n    .replace('milliliter', 'ml')\n    .replace('mililtr', 'ml')\n    .replace('liter', 'ltr')\n    .replace('eetlepels', 'el')\n    .replace('eetlepel', 'el')\n    .replace(/([Pp]eper) en zout/i, '$1 & zout')\n    .replace(/1\u00BD/, '1.5')\n    .replace(/1\\/2/g, '0.5')\n    .replace(/1\\/4/g, '0.25')\n    .replace(/\u00BD/g, '0.5')\n    .replace(/\u00BC/g, '0.25')\n}\n\n\nexport function multiplyIngredients(item: string, multiplier: number) {\n  let isOne = /(^| )(1) /.test(item)\n\n  item = item.replace(/^[Ss]nuf /, 'snufje ')\n\n  if (multiplier > 1) {\n    item = item\n      .replace(\n        /^([Hh]andje|[Ss]cheutje|[Kk]lontje|[Zz]akje|[Ss]neetje|[Ss]nufje)/,\n        '1 $1s',\n      )\n      .replace(/^[Kk]lont /, '1 klontjes ')\n      .replace(/^[Pp]aar /, '1 handjes ')\n      .replace(/ml\\/gr/g, 'gr')\n      .replace(/(\\d+),(\\d+)/g, '$1.$2')\n      .replace(/1\u00BD/, '1.5')\n      .replace(/1\\/2/g, '0.5')\n      .replace(/1\\/4/g, '0.25')\n      .replace(/\u00BD/g, '0.5')\n      .replace(/\u00BC/g, '0.25')\n      .replace(/\u2153/g, '0.333333333333')\n      .replace(/(?<!a\\s(\\d+)?)\\d+(\\.\\d+)?/g, function(match, capture) {\n        if (match.includes('.')) {\n          let f = parseFloat(match) * multiplier\n          return f.toFixed(2).replace(/\\.?0+$/, '')\n        }\n\n        return (parseInt(match) * multiplier).toString()\n      })\n      .replace(/(\\d{4,}) gr /g, function(match, capture) {\n        return parseInt(match) / 1000 + ' kg '\n      })\n      .replace(/(\\d{4,}) ml /g, function(match, capture) {\n        return parseInt(match) / 1000 + ' ltr '\n      })\n  }\n\n  item = item\n    .replace(/ml\\/gr/g, 'gr.')\n    .replace(/( (ml|gr|kg|el|tl|ltr)) /g, '$1. ')\n\n  //check if something has a unit, but skip constructions like \"a 100 ml\"\n  let hasUnit =\n    /(?<!a\\s(\\d+)?)\\d+(\\.\\d+) (ml|gr|kg|el|tl|ltr|stukken|stuks)/.test(item)\n\n  if (isOne && !hasUnit && multiplier > 1) {\n    item = item\n      .replace(\n        /(ui|limoen|citroen|meloen|prei|[Ss]cheut)( |$)/g,\n        '$1' + 'en' + '$2',\n      )\n      .replace(\n        /(uitje|appel|peper|bakje|sneetje|snufje|plak|courgette|handje|komkommer|teentje|blikje|zakje|klontje|blokje|wrap|kopje|lapje)( |$)/g,\n        '$1' + 's' + '$2',\n      )\n      .replace(/(snee)( |$)/g, 'sneden$2')\n      .replace(/(ei)( |$)/g, 'eieren$2')\n      .replace(/(avocado)( |$)/g, \"$1's$2\")\n      .replace(/(kop)( |$)/g, 'koppen$2')\n      .replace(/(kool)( |$)/g, 'kolen$2')\n      .replace(/(teen)( |$)/g, 'tenen$2')\n      .replace(/(tablet)( |$)/g, 'tabletten$2')\n      .replace(/(banaan)( |$)/g, 'bananen$2')\n      .replace(/(peer)( |$)/g, 'peren$2')\n      .replace(/(blik)( |$)/g, 'blikken$2')\n      .replace(/(middelgroot)( |$)/, 'middelgrote$2')\n      .replace(/(klein blikjes)( |$)/g, 'kleine blikjes$2')\n  }\n\n  return item\n}\n"],
  "mappings": "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",
  "names": []
}
